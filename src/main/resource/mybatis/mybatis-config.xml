<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <settings>
        <!-- 全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存。默认true -->
        <setting name="cacheEnabled" value="true" />
        <!-- 延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。 特定关联关系中可通过设置fetchType属性来覆盖该项的开关状态。 默认false-->
        <setting name="lazyLoadingEnabled" value="true" />
        <!-- 当开启时，任何方法的调用都会加载该对象的所有属性。否则，每个属性会按需加载（参考lazyLoadTriggerMethods).默认false(3.4.1之后) (true in ≤3.4.1,3.4.1（包含）之前的默认true) -->
        <setting name="aggressiveLazyLoading" value="false" />
        <!-- 是否允许单一语句返回多结果集（需要兼容驱动）。默认true  -->
        <setting name="multipleResultSetsEnabled" value="true" />
        <!-- 使用列标签代替列名。不同的驱动在这方面会有不同的表现， 具体可参考相关驱动文档或通过测试这两种不同的模式来观察所用驱动的结果。默认true  -->
        <setting name="useColumnLabel" value="true" />
        <!-- 允许 JDBC 支持自动生成主键，需要驱动兼容。 如果设置为 true 则这个设置强制使用自动生成主键，尽管一些驱动不能兼容但仍可正常工作（比如 Derby）。默认false -->
        <setting name="useGeneratedKeys" value="false" />
        <!-- 指定 MyBatis 应如何自动映射列到字段或属性。 NONE 表示取消自动映射；PARTIAL 只会自动映射没有定义嵌套结果集映射的结果集。 FULL 会自动映射任意复杂的结果集（无论是否嵌套）。	默认	PARTIAL -->
        <setting name="autoMappingBehavior" value="PARTIAL"/>
        <!-- 指定发现自动映射目标未知列（或者未知属性类型）的行为。NONE: 不做任何反应 ,WARNING: 输出提醒日志 ('org.apache.ibatis.session.AutoMappingUnknownColumnBehavior' 的日志等级必须设置为 WARN), FAILING: 映射失败 (抛出 SqlSessionException) 默认NONE -->
        <!--<setting name="autoMappingUnknownColumnBehavior" value="NONE"/>-->
        <!-- 配置默认的执行器。SIMPLE 就是普通的执行器；REUSE 执行器会重用预处理语句（prepared statements）； BATCH 执行器将重用语句并执行批量更新。默认SIMPLE -->
        <setting name="defaultExecutorType" value="SIMPLE" />
        <!-- 设置超时时间，它决定驱动等待数据库响应的秒数。任意正整数	默认未设置Not Set (null) -->
        <setting name="defaultStatementTimeout" value="25" />
        <!-- 为驱动的结果集获取数量（fetchSize）设置一个提示值。此参数只可以在查询设置中被覆盖。任意正整数默认值	Not Set (null) -->
        <!--<setting name="defaultFetchSize" value="100" />-->
        <!-- 允许在嵌套语句中使用分页（RowBounds）。如果允许使用则设置为false。默认false -->
        <setting name="safeRowBoundsEnabled" value="false" />
        <!-- 是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN 到经典 Java 属性名 aColumn 的类似映射。默认false -->
        <setting name="mapUnderscoreToCamelCase" value="false" />
        <!-- MyBatis 利用本地缓存机制（Local Cache）防止循环引用（circular references）和加速重复嵌套查询。 默认值为 SESSION，这种情况下会缓存一个会话中执行的所有查询。 若设置值为 STATEMENT，本地会话仅用在语句执行上，对相同 SqlSession 的不同调用将不会共享数据。默认SESSION -->
        <setting name="localCacheScope" value="SESSION" />
        <!-- 当没有为参数提供特定的 JDBC 类型时，为空值指定 JDBC 类型。 某些驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，比如 NULL、VARCHAR 或 OTHER。默认OTHER -->
        <setting name="jdbcTypeForNull" value="OTHER" />
        <!-- 指定哪个对象的方法触发一次延迟加载。用逗号分隔的方法列表。默认	equals,clone,hashCode,toString -->
        <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" />
        <!-- 标准日志输出,控制台 -->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
        <!-- 指定 MyBatis 增加到日志名称的前缀。任何字符串, 默认	Not set -->
        <!-- <setting name="logPrefix" value="com.lepin."/> -->
        <!-- 指定 MyBatis 所用日志的具体实现，未指定时将自动查找。SLF4J | LOG4J | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | STDOUT_LOGGING | NO_LOGGING 默认	Not set -->
        <!-- <setting name="logImpl" value="LOG4J"/> -->
    </settings>
    <typeAliases>
        <!-- 指定一个包名，MyBatis 会在包名下面搜索需要的 Java Bean ,不用一个个配置别名了-->
        <package name="com.yangtao.springDemo.domain"/>
    </typeAliases>

    <!-- <plugins> -->
    <!-- com.github.pagehelper为PageHelper类所在包名 -->

    <!-- <plugin interceptor="com.github.pagehelper.PageHelper">
        <property name="dialect" value="mysql" /> -->
    <!-- 该参数默认为false -->
    <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
    <!-- 和startPage中的pageNum效果一样 -->
    <!-- <property name="offsetAsPageNum" value="true" /> -->
    <!-- 该参数默认为false -->
    <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
    <!-- <property name="rowBoundsWithCount" value="true" /> -->
    <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
    <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型） -->
    <!-- <property name="pageSizeZero" value="true" /> -->
    <!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
    <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
    <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
    <!-- <property name="reasonable" value="false" /> -->
    <!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 -->
    <!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->
    <!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,不配置映射的用默认值 -->
    <!-- 不理解该含义的前提下，不要随便复制该配置 -->
    <!-- <property name="params" value="pageNum=start;pageSize=limit;" /> -->
    <!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page -->
    <!-- <property name="returnPageInfo" value="check" /> -->
    <!-- </plugin> -->
    <!-- </plugins> -->

</configuration>